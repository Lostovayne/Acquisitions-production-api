services:
  # Neon Local proxy service
  neon-local:
    image: neondatabase/neon_local:latest
    container_name: acquisitions-neon-local
    ports:
      - '5432:5432'
    env_file:
      - .env.development
    volumes:
      # Persist Neon Local metadata
      - ./.neon_local/:/tmp/.neon_local
      # Git integration for branch detection
      - ./.git/HEAD:/tmp/.git/HEAD:ro,consistent
    healthcheck:
      test: ['CMD', 'pg_isready', '-h', 'localhost', '-p', '5432', '-U', 'neon']
      interval: 300s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

    # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: acquisitions-api-dev
    ports:
      - '3000:3000'
    env_file:
      - .env.development
    volumes:
      # Mount source code for development with hot reload
      - ./src:/app/src
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      - ./drizzle.config.js:/app/drizzle.config.js:ro
      - ./drizzle:/app/drizzle
      # Exclude node_modules to prevent conflicts
      - /app/node_modules
    depends_on:
      neon-local:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          'const http = require("http"); const options = { host: "localhost", port: 3000, timeout: 2000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on("error", () => process.exit(1)); req.end();',
        ]
      interval: 300s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  default:
    name: acquisitions-dev-network
